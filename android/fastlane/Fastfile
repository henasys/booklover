# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
  def read_app_build_gradle()
    path = '../app/build.gradle'

    reMajor = /ext\.versionMajor\s+=\s+(\d+)/
    reMinor = /ext\.versionMinor\s+=\s+(\d+)/
    rePatch = /ext\.versionPatch\s+=\s+(\d+)/

    s = File.read(path)
    versionMajor = s[reMajor, 1].to_i
    versionMinor = s[reMinor, 1].to_i
    versionPatch = s[rePatch, 1].to_i
    [versionMajor, versionMinor, versionPatch]
  end

  desc "Display version"
  lane :version do
    major, minor, patch = read_app_build_gradle()
    UI.message("version '#{major}'.'#{minor}'.'#{patch}' ")
  end

  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Submit a new Beta Build to Crashlytics Beta"
  lane :beta do
    gradle(task: "clean assembleRelease")
    crashlytics
  
    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  desc "Deploy a new version to the Google Play"
  lane :release do
    gradle(task: "clean bundleRelease")
    upload_to_play_store(
      skip_upload_metadata: true,
      skip_upload_changelogs: true,
      skip_upload_screenshots: true,
      skip_upload_images: true,
      skip_upload_apk: true
    )
  end
end
